import asyncio
from apscheduler.schedulers.asyncio import AsyncIOScheduler

from bot.config import REPORT_CHANNEL_ID
from bot.create_bot import bot, dp
from bot.handlers.handlers_chat import register_handlers_chat
from bot.handlers.handlers_bot import register_handlers_bot
from db.db_queries import daily_update, get_active_users_count, get_blocked_users_count, get_muted_users_count, get_statistics, get_statistics_ban, get_statistics_mut, minute_update, monthly_update, get_statistics_new_user, get_statistics_exit_user, weekly_update


async def minute_task():
    minute_update()


async def daily_task():
    daily_update()


async def weekly_task():
    weekly_update()


async def monthly_task():
    monthly_update()


async def send_statistics():
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    statistics = get_statistics()
    statistics_ban = get_statistics_ban()
    statistics_mut = get_statistics_mut()
    active = get_active_users_count()
    blocked = get_blocked_users_count()
    muted = get_muted_users_count()
    statistics_new_user = get_statistics_new_user()
    statistics_exit_user = get_statistics_exit_user()
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
    message_text = (
        "üìä <b>–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b>\n\n"
        f"üë§ <b>–ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:</b> {active}\n"
        f"üö´ <b>–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:</b> {blocked}\n"
        f"üîá <b>–ó–∞–º—É—á–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:</b> {muted}\n\n"
        
        "<b>üìà –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ø–µ—Ä–∏–æ–¥—ã:</b>\n"
        f"‚Ä¢ <b>1 –¥–µ–Ω—å:</b> {statistics.one_day}\n"
        f"‚Ä¢ <b>7 –¥–Ω–µ–π:</b> {statistics.seven_day}\n"
        f"‚Ä¢ <b>30 –¥–Ω–µ–π:</b> {statistics.thirty_day}\n\n"
        
        "<b>üë§ –ù–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ø–µ—Ä–∏–æ–¥—ã:</b>\n"
        f"‚Ä¢ <b>1 –¥–µ–Ω—å:</b> {statistics_new_user.one_day}\n"
        f"‚Ä¢ <b>7 –¥–Ω–µ–π:</b> {statistics_new_user.seven_day}\n"
        f"‚Ä¢ <b>30 –¥–Ω–µ–π:</b> {statistics_new_user.thirty_day}\n\n"
        
        "<b>üîá –í—ã—à–µ–¥—à–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–µ—Ä–∏–æ–¥—ã:</b>\n"
        f"‚Ä¢ <b>1 –¥–µ–Ω—å:</b> {statistics_exit_user.one_day}\n"
        f"‚Ä¢ <b>7 –¥–Ω–µ–π:</b> {statistics_exit_user.seven_day}\n"
        f"‚Ä¢ <b>30 –¥–Ω–µ–π:</b> {statistics_exit_user.thirty_day}"
    )

    await bot.send_message(REPORT_CHANNEL_ID, message_text, parse_mode="HTML")


async def main() -> None:
    await bot.delete_webhook(drop_pending_updates=True)

    scheduler = AsyncIOScheduler()

    scheduler.add_job(minute_task, 'cron', minute='*')
    scheduler.add_job(send_statistics, 'cron', hour=0, minute=0)
    scheduler.add_job(daily_task, 'cron', hour=0, minute=5)
    scheduler.add_job(weekly_task, 'cron', day_of_week='mon', hour=0, minute=5)
    scheduler.add_job(monthly_task, 'cron', day=1, hour=0, minute=5)
    scheduler.start()

    await dp.start_polling(bot)

if __name__ == "__main__":
    register_handlers_bot(dp)
    register_handlers_chat(dp)
    asyncio.run(main())
